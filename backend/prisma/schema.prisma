// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  password  String
  username  String
  refreshToken  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  ideas Idea[] @relation("UserIdeas")
}

model Idea {
  id          String      @id @default(uuid())
  title       String
  description String?
  status      IdeaStatus
  type        IdeaType
  tags        String[]

  author      User         @relation("UserIdeas", fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String

  kanbanItems KanbanItem[]
  todos       Todo[]

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model KanbanBoard {
  id          String         @id @default(uuid())
  title       String
  description String?
  columns     KanbanColumn[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model KanbanColumn {
  id        String        @id @default(uuid())
  board     KanbanBoard   @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   String
  title     String
  order     Int
  items     KanbanItem[]
  createdAt DateTime       @default(now())
}

model KanbanItem {
  id        String        @id @default(uuid())
  column    KanbanColumn  @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId  String
  idea      Idea?         @relation(fields: [ideaId], references: [id], onDelete: Cascade)
  ideaId    String?
  title     String?
  order     Int
  createdAt DateTime       @default(now())
}

model Todo {
  id        String    @id @default(uuid())
  idea      Idea      @relation(fields: [ideaId], references: [id], onDelete: Cascade)
  ideaId    String
  date      DateTime
  createdAt DateTime   @default(now())
}

enum IdeaStatus {
  DRAFT
  PUBLISHED
}

enum IdeaType {
  IDEA
  SCRIPT
  TASK
  NOTE
}
