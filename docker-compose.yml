services:
  db:
    image: postgres:16-alpine
    container_name: grimoire_db
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grimoire_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: grimoire_backend
    restart: unless-stopped
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./backend/src:/app/src:ro
      - /app/node_modules
    networks:
      - grimoire_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: grimoire_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "5173:5173"
    networks:
      - grimoire_net

  nginx:
    image: nginx:1.25-alpine
    container_name: grimoire_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - grimoire_net

networks:
  grimoire_net:
    driver: bridge

volumes:
  postgres_data:
